#
# LoPresti smart home - configuration file for Home Assistant
#
##############################################################

# General HA configuration
############################

homeassistant:
  name: !secret ha_name
  # location required to calculate the time the sun rises and sets
  latitude: !secret ha_latitude
  longitude: !secret ha_longitude
  # altitude above sea level in meters, impacts weather/sunrise data
  elevation: !secret ha_elevation
  unit_system: metric
  time_zone: Europe/Zurich
  # custom icons and friendly names go there
  customize: !include customizations.yaml

# include all layout/grouping
group: !include groups.yaml

# include all scenes
scene: !include scenes.yaml

# include all scripts
script: !include scripts.yaml

# the automation rules are split per area
automation:
  # Stato generale casa
  - !include automations/giornoauto.yaml
  - !include automations/notte.yaml
  - !include automations/notteauto.yaml
  - !include automations/festa.yaml
  - !include automations/bad_logins.yaml
  # Cucu'
  - !include automations/cucu.yaml
  # Presa comandata lume
  - !include automations/lume_sera.yaml
  - !include automations/lume_rientro_serale.yaml
  - !include automations/lume_pioggia_on.yaml
  - !include automations/lume_pioggia_off.yaml
  # VerandaCam night mode
  - !include automations/verandacam_night.yaml
  # Media center
  - !include automations/cinemaon.yaml
  - !include automations/radio.yaml
  # Covers
  - !include automations/tendaveranda_open.yaml
  - !include automations/tendaveranda_close.yaml
  - !include automations/covers_pianoterra_close.yaml
  - !include automations/cupola.yaml
  # Irrigazione
#  - !include automations/irrigazione.yaml

# Frontend helper components for automations
input_select:
  # Global home mode selector
  statocasa:
    name: Stato casa
    options:
      - Normale
      - Notte
      - Festa
    icon: mdi:home

  # extra controls for the missing states of the covers - workaround until proper integration
  cover_cupola_state:
    options:
      - open
      - closed
    initial: closed

  cover_veranda_state:
    options:
      - open
      - closed
    initial: closed

  # Radio selector
  internet_radio:
    name: Radio
    options:
      - Scegli...
      - Radio Maria
      - Venezia Classica
    initial: Scegli...
    icon: mdi:radio

# Logging levels
logger:
  default: warning
  logs:
    homeassistant.components.device_tracker: critical
    homeassistant.components.camera: info
    homeassistant.components.automation: debug
    homeassistant.components.sensor.command_line: warning
    homeassistant.components.scene: info
    homeassistant.components.switch: info
    homeassistant.components.cover: info

# Enables the frontend
frontend:

# Enables the configuration tab
config:

# Login and SSL
http:
  api_password: !secret http_password
  base_url: !secret http_base_url
  ssl_certificate: /config/SSLcertificate.crt
  ssl_key: /config/SSLprivatekey.key
  ip_ban_enabled: True
  login_attempts_threshold: 5
  trusted_networks:
    - 192.168.1.0/24

# Checks for available updates and reports used components
updater:
  include_used_components: True

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables events recording
recorder:
  exclude:
    domains:
      - weblink
      - updater
    entities:
      - sun.sun   # Don't record Sun/Moon data
      - sensor.moon
      - sensor.last_boot
      - sensor.igd_received_bytes
      - sensor.igd_sent_bytes
      - sensor.ha_bad_logins
      - sensor.ha_warnings
      - sensor.ha_errors
      - sensor.dtentratacam
      - sensor.dtsalonecam
      - sensor.dtverandacam
      - sensor.dtrepeater
      - sensor.dtprinter
      - sensor.dtiomegadisk
      - sensor.dtsunrisetv
      - sensor.dtchromecast
      - sensor.dtledcontroller
      - sensor.dtipad
      - sensor.dthtc
      - sensor.dtisamac
      - sensor.dtglplap

# Displays graphs in the main frontend
#history_graph:
#  gr_temp:
#    name: Temperature
#    entities:
#      - sensor.netatmo_outdoor_temperature
#      - sensor.netatmo_indoor_temperature
#      - sensor.veranda_temperature
#      - sensor.pws_feelslike_c
#      - sensor.pws_dewpoint_c
#      - sensor.pws_temp_high_record_c
#      - sensor.pws_temp_low_record_c
#    hours_to_show: 36

# Enables support for tracking state changes over time -> to be replaced by grafana
history:

# View all events in a logbook
logbook:

# Zones
zone 1:
  name: CERN
  latitude: 46.232175
  longitude: 6.050528
  radius: 600

zone 2:
  name: !secret z2_name
  latitude: !secret z2_latitude
  longitude: !secret z2_longitude
  radius: 300

zone 3:
  name: !secret z3_name
  latitude: !secret z3_latitude
  longitude: !secret z3_longitude
  radius: 100

#zone 4:
#  name: !secret z4_name
#  latitude: !secret z4_latitude
#  longitude: !secret z4_longitude
#  radius: 10000

# Useful links
weblink:
  entities:
    - name: Router
      url: http://192.168.1.1
    - name: QNAP administration
      url: !secret qnap_admin_link
    - name: Onkyo web interface
      url: http://192.168.1.30
    - name: VerandaCam administration
      url: http://192.168.1.21:8080
    - name: Printer administration
      url: http://192.168.1.50
    - name: Google Cloud Print
      url: https://www.google.com/cloudprint/#printers
    - name: IOMega disk administration
      url: http://192.168.1.32
    - name: WiFi Repeater administration
      url: http://192.168.1.30
    - name: NetAtmo station
      url: https://my.netatmo.com/app/station
    - name: WUnderground station
      url: !secret wunderground_link

panel_iframe:
  homeass:
    title: Home Assistant Web
    icon: mdi:home-assistant
    url: https://home-assistant.io
# dashboard:
#   title: Grafana for HA
#   icon:
#   url:

# Custom cloud services
#########################

# Text to speech
tts:
  platform: google
  language: 'it'

# Pushbullet
notify me:
  platform: pushbullet
  name: notifyglp
  api_key: !secret pushbullet_api_key

# IFTTT
#ifttt:
#  key: !secret ifttt_key

# Connected devices
####################

# MQTT broker (mosquitto) running on the QNAP
mqtt:
  broker: 192.168.1.48

# Track home devices
device_tracker:
  - platform: nmap_tracker
    interval_seconds: 60
    hosts:
    - 192.168.1.1/24

# Track mobile phones' locations
  - platform: gpslogger

# To get router statistics
upnp:
  port_mapping:

# NetAtmo weather station
netatmo:
  api_key: !secret netatmo_api_key
  secret_key: !secret netatmo_secret_key
  username: !secret netatmo_user
  password: !secret netatmo_password
  discovery: False

camera:
# Doorbell camera
#  - platform: generic
#    name: Entrata
#    still_image_url: http://192.168.1.../image.jpg
#    username: admin
#    password: !secret camera_password

# DLink camera
  - platform: generic
    name: Salone-Cucina
    still_image_url: http://192.168.1.4/image.jpg
    username: admin
    password: !secret camera_password
#  - platform: mjpeg
#    mjpeg_url: http://192.168.1.4/video.cgi

# MotoG camera
android_ip_webcam:
  name: VerandaCam
  host: 192.168.1.21
  username: admin
  password: !secret camera_password
  sensors:
    - motion
    - light
  switches:
    - focus
    - torch
    - video_recording
    - night_vision

# Onkyo amplifier
media_player:
  - platform: onkyo
    host: 192.168.1.30
    name: Amplificatore Onkyo
    sources:
      video2: 'Cable TV'
      dvd: 'BD/DVD'
      video6: 'NAS'
      video3: 'ChromeCast'
      network: 'Network'
      aux1: 'Aux'
      #tuner: 'Tuner'
      #dlna: 'DLNA'
      #internet-radio: 'Radio'

# Google Chromecast
  - platform: cast
    host: 192.168.1.55

# Edimax power socket
switch:
  - platform: edimax
    host: 192.168.1.40
    name: Smartplug
    password: !secret edimax_password

# Commands to interface to KIRA
  - platform: command_line
    switches:
      kira_projector_power:
        command_on: /usr/bin/curl -X GET http://192.168.1.31/remote2.htm?button020
        command_off: /usr/bin/curl -X GET http://192.168.1.31/remote2.htm?button020
        value_template: '{{ value == "1" }}'
        friendly_name: KIRA Sony Projector
      #kira_dvd_power:
      #kira_tvdecoder_power:

      # a switch for the 'my' position of a cover (cf. below)
      cover_salone_my:
        command_on: /config/pytahoma Salone my
        friendly_name: Salone cover semiopen

# Somfy Tahoma for shutters/roof/store
cover:
#  - platform: somfytahoma
#    username: !secret somfy_user
#    password: !secret somfy_password
  - platform: command_line
    covers:
      cucina:
        command_open: /config/pytahoma Cucina up
        command_close: /config/pytahoma Cucina my     # that's a Somfy feature
        command_stop: /config/pytahoma Cucina stop
      salone:
        command_open: /config/pytahoma Salone up
        command_close: /config/pytahoma Salone down
        command_stop: /config/pytahoma Salone stop
      stanza_da_letto:
        command_open: /config/pytahoma 'Stanza da letto' up
        command_close: /config/pytahoma 'Stanza da letto' down
        command_stop: /config/pytahoma 'Stanza da letto' stop
      camera_irene:
        command_open: /config/pytahoma 'Camera Irene' up
        command_close: /config/pytahoma 'Camera Irene' down
        command_stop: /config/pytahoma 'Camera Irene' stop
      camera:
        command_open: /config/pytahoma Camera up
        command_close: /config/pytahoma Camera down
        command_stop: /config/pytahoma Camera stop
      cupola:
        command_open: /config/pytahoma Cupola open
        command_close: /config/pytahoma Cupola close
        command_stop: /config/pytahoma Cupola stop    # not working actually
      veranda:
        # this is an awning, not a shutter
        command_open: /config/pytahoma Veranda down
        command_close: /config/pytahoma Veranda up
        command_stop: /config/pytahoma Veranda stop

#light:
# LED for the home theater
#  - platform: flux_led
#    devices:
#      192.168.1...:
#        name: led_salone


# Sensors
##########

# Track the Sun and the Moon
sun:
sensor:
  - platform: moon

# The current Home Assistant version, to track upgrades history
  - platform: version

# HA-specific sensors
  - platform: command_line
    name: HA bad logins
    # this actually fails the very first time it is executed, possibly because HA is not
    # fully operational: this way the first false hit is taken out
    command: grep "Login attempt" /config/home-assistant.log | grep -cv "Command failed"
    scan_interval: 600

  - platform: command_line
    name: HA warnings
    command: grep -c WARN /config/home-assistant.log
    scan_interval: 600

  - platform: command_line
    name: HA errors
    command: grep -c ERROR /config/home-assistant.log
    scan_interval: 600

# Internet speed test
  - platform: speedtest
    monitored_conditions:
      - ping
      - download
      - upload
    hour:
      - 7
      - 15
      - 23
    minute:
      - 15

# QNAP
  - platform: qnap
    host: 192.168.1.48
    username: admin
    password: !secret qnap_password
    verify_ssl: true
    monitored_conditions:
      - system_temp
      - cpu_usage
      - memory_percent_used
      - volume_size_free

# Particle photon Veranda
  - platform: mqtt
    name: Veranda Temperature
    state_topic: thlveranda
    value_template: '{{ value_json.temp }}'
    unit_of_measurement: '°C'

  - platform: mqtt
    name: Veranda Humidity
    state_topic: thlveranda
    value_template: '{{ value_json.humidity }}'
    unit_of_measurement: '%'

  - platform: mqtt
    name: Veranda Brightness
    state_topic: thlveranda
    value_template: '{{ value_json.lux }}'
    unit_of_measurement: '%'

# OwnTrack-related sensors
#  - platform: mqtt
#    state_topic: "owntracks/nova"
#    name: "Battery Nova"
#    unit_of_measurement: "%"
#    value_template: '{{ value_json.batt }}'

# NetAtmo weather station
  - platform: netatmo
    modules:
      Indoor:
        - temperature
        - humidity
        - pressure
        - co2
        - noise
      Outdoor:
        - temperature
        - humidity
        - min_temp
        - max_temp
        - battery_vp
      Terrace:
        - windangle
        - windstrength
        - gustangle
        - guststrength
        - battery_vp

# WUnderground on top of NetAtmo
  - platform: wunderground
    api_key: !secret wunderground_key
    pws_id: !secret wunderground_pws_id
    monitored_conditions:
      - weather_1d_metric
      - weather_1n_metric
#     - weather_2d_metric
#     - weather_2n_metric
      - temp_high_record_c
      - temp_high_1d_c
      - temp_c
      - feelslike_c
      - dewpoint_c
      - temp_low_1d_c
      - temp_low_record_c
      - relative_humidity
      - pressure_mb
      - pressure_trend
      - precip_today_metric
      - precip_1d
      - wind_kph
      - wind_gust_kph
      - wind_dir
      - alerts

# Dark Sky web service
  - platform: darksky
    api_key: !secret darksky_api_key
    monitored_conditions:
      - summary
      - precip_intensity
      - precip_probability
      - precip_intensity_max
      - cloud_cover

# TPG & SBB-CFF-FFS
# download data at https://opentransportdata.swiss/en/dataset
#  - platform: gtfs
#    name: Tram 18
#    origin: 8593026        # Meyrin village
#    destination: 8587437   # Carouge
#    data: sbb
#
#  - platform: gtfs
#    name: Treno
#    origin: 8501006        # Meyrin-Vernier
#    destination: 8501008   # Geneve Cornavin
#    data: sbb

# Templated sensors
#
# convert all the devices' states to online/offline
  - platform: template
    sensors:
      dtentratacam:
        friendly_name: EntrataCam
        icon_template: mdi:camera-front-variant
        value_template: "{% if is_state('device_tracker.entratacam', 'home') %}on{% else %}off{% endif %}"
      dtsalonecam:
        friendly_name: SaloneCam
        icon_template: mdi:camera-front-variant
        value_template: "{% if is_state('device_tracker.salonecam', 'home') %}on{% else %}off{% endif %}"
      dtverandacam:
        friendly_name: VerandaCam
        icon_template: mdi:camera-front-variant
        value_template: "{% if is_state('device_tracker.verandacam', 'home') %}on{% else %}off{% endif %}"
      dtrepeater:
        friendly_name: WiFi Repeater
        icon_template: mdi:access-point-network
        value_template: "{% if is_state('device_tracker.repeater', 'home') %}on{% else %}off{% endif %}"
      dtprinter:
        friendly_name: Printer
        icon_template: mdi:printer
        value_template: "{% if is_state('device_tracker.printer', 'home') %}on{% else %}off{% endif %}"
      dtiomegadisk:
        friendly_name: IOMega Disk
        icon_template: mdi:harddisk
        value_template: "{% if is_state('device_tracker.iomegadisk', 'home') %}on{% else %}off{% endif %}"
      dtsunrisetv:
        friendly_name: Sunrise TV
        icon_template: mdi:television
        value_template: "{% if is_state('device_tracker.sunrisetv', 'home') %}on{% else %}off{% endif %}"
      dtchromecast:
        friendly_name: ChromeCast
        icon_template: mdi:cast
        value_template: "{% if is_state('device_tracker.chromecast', 'home') %}on{% else %}off{% endif %}"
      dtbddvd:
        friendly_name: BD/DVD
        icon_template: mdi:disk
        value_template: "{% if is_state('device_tracker.bddvd', 'home') %}on{% else %}off{% endif %}"
      dtkira:
        friendly_name: KIRA
        icon_template: mdi:remote
        value_template: "{% if is_state('device_tracker.kira', 'home') %}on{% else %}off{% endif %}"
      dtledcontroller:
        friendly_name: LED Salone
        icon_template: mdi:led-strip
        value_template: "{% if is_state('device_tracker.ledcontroller', 'home') %}on{% else %}off{% endif %}"
      dtipad:
        friendly_name: iPad
        icon_template: mdi:tablet-ipad
        value_template: "{% if is_state('device_tracker.ipad', 'home') %}on{% else %}off{% endif %}"
      dthtc:
        friendly_name: HTC
        icon_template: mdi:cellphone-android
        value_template: "{% if is_state('device_tracker.htc', 'home') %}on{% else %}off{% endif %}"
      dtisamac:
        friendly_name: Mac Isa
        icon_template: mdi:laptop-mac
        value_template: "{% if is_state('device_tracker.isamac', 'home') %}on{% else %}off{% endif %}"
      dtglplap:
        friendly_name: PC Giu
        icon_template: mdi:laptop-windows
        value_template: "{% if is_state('device_tracker.glplap', 'home') %}on{% else %}off{% endif %}"

# group current, min, and max temperature in one sensor
      netatmo_outdoor_minmaxtemperature:
        friendly_name: Outdoor Temperature
        icon_template: mdi:thermometer
        value_template: "{{ states.sensor.netatmo_outdoor_temperature.state }}°C ({{ states.sensor.netatmo_outdoor_min_temp.state }}°C ÷ {{ states.sensor.netatmo_outdoor_max_temp.state }}°C)"
