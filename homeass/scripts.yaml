#
# LoPresti smart home - scripts
#
#######################################

# this is executed either automatically or as response to statocasa changed to 'Notte'
nightmode:
  alias: Modo notte
  sequence:
    - alias: Spegni luci
      service: script.turn_on
      entity_id: script.lightsoff
    - alias: Somfy scenario notte
      service: scene.turn_on
      entity_id: scene.notte
    - condition: template
      value_template: "{{ states.sensor.netatmo_indoor_temperature.state|int >= 24 and
                          states.input_boolean.presence.state == 'off' }}"
    - service: cover.open_cover
      entity_id: cover.cupola

# "sub-script" to turn lights off depending on usage of the amplifier
lightsoff:
  alias: Spegni luci salone
  sequence:
    - alias: Spegni lume
      service: homeassistant.turn_off
      entity_id: switch.smartplug
    - condition: template
      value_template: "{{ is_state('media_player.amplificatore_onkyo', 'off') }}"
    - service: light.turn_off
      entity_id: light.led_salone


# this is executed either automatically or as response to statocasa changed to 'Normale'
# the last step depends on the condition to be true - cf. also cupola.yaml
normalmode:
  alias: Modo normale
  sequence:
    - alias: VerandaCam modo giorno
      service: homeassistant.turn_off
      entity_id: switch.verandacam_night_vision
    - alias: Somfy scenario sveglia
      service: scene.turn_on
      entity_id: scene.sveglia
    - alias: Somfy scenario mattina
      service: scene.turn_on
      entity_id: scene.mattina
    - condition: template
      value_template: '{{ states.sensor.netatmo_indoor_temperature.state|int >= 24 - (now().month > 4 and now().month < 10)|int }}'
    - service: cover.open_cover
      entity_id: cover.cupola

# this is executed in response to statocasa changed to 'Festa'
partymode:
  alias: Modo festa
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.led_salone
    - service: media_player.turn_on
      entity_id: media_player.amplificatore_onkyo

# this is executed by the 'Spegni cinema' scene: either switch on light or open cover
lucesalone:
  alias: Luce salone dopo cinema
  sequence:
    - service: homeassistant.turn_on
      data_template:
        entity_id: >-
          {% if is_state('sun.sun', 'below_horizon') %}
            switch.smartplug
          {% endif %}
    - service: cover.stop_cover
      data_template:
        entity_id: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            cover.salone
          {% endif %}

# this is available in the Media center group to e.g. stop the radio
stopaudio:
  alias: Stop audio
  sequence:
    - alias: Reset Internet radio
      service: input_select.select_option
      data:
        entity_id: input_select.internet_radio
        option: 'Scegli...'
    - alias: Spegni ChromeCast
      service: media_player.turn_off
      entity_id: media_player.chromecast
    - alias: Spegni Amplificatore
      service: media_player.turn_off
      entity_id: media_player.amplificatore_onkyo

tvcucina:
  alias: TV cucina
  sequence:
    - service: media_player.turn_on
      entity_id: media_player.amplificatore_onkyo
    - service: media_player.select_source
      entity_id: media_player.cable_tv
    - delay: '00:00:05'
    - service: media_player.turn_off
      entity_id: media_player.amplificatore_onkyo
